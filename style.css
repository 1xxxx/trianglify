/*! normalize.css v3.0.2 | MIT License | github.com/necolas/normalize.css */legend,td,th{padding:0}a:active,a:hover,input[type=range]:focus{outline:0}img,legend{border:0}pre,textarea{overflow:auto}p,pre code{text-align:left}.component-hero .fancybutton,a.button{-ms-user-select:none;user-select:none;-webkit-user-select:none;-moz-user-select:none}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;box-sizing:border-box}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0;font-size:3rem}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}.component-hero,section.dark{-webkit-font-smoothing:antialiased}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:icomoon;src:url(fonts/icomoon.eot?-sfogva);src:url(fonts/icomoon.eot?#iefix-sfogva)format('embedded-opentype'),url(fonts/icomoon.woff?-sfogva)format('woff'),url(fonts/icomoon.ttf?-sfogva)format('truetype'),url(fonts/icomoon.svg?-sfogva#icomoon)format('svg');font-weight:400;font-style:normal}[class*=" icon-"],[class^=icon-]{font-family:icomoon;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-spinner11:before{content:"\e984"}.icon-twitter3:before{content:"\ea93"}.icon-github:before{content:"\eab1"}.hljs-comment{color:#969896}.css .hljs-class,.css .hljs-id,.css .hljs-pseudo,.hljs-attribute,.hljs-regexp,.hljs-tag,.hljs-variable,.html .hljs-doctype,.ruby .hljs-constant,.xml .hljs-doctype,.xml .hljs-pi,.xml .hljs-tag .hljs-title{color:#c66}.hljs-built_in,.hljs-constant,.hljs-literal,.hljs-number,.hljs-params,.hljs-pragma,.hljs-preprocessor{color:#de935f}.css .hljs-rules .hljs-attribute,.ruby .hljs-class .hljs-title{color:#f0c674}.hljs-header,.hljs-inheritance,.hljs-string,.hljs-value,.ruby .hljs-symbol,.xml .hljs-cdata{color:#b5bd68}.css .hljs-hexcolor,.hljs-title{color:#8abeb7}.coffeescript .hljs-title,.hljs-function,.javascript .hljs-title,.perl .hljs-sub,.python .hljs-decorator,.python .hljs-title,.ruby .hljs-function .hljs-title,.ruby .hljs-title .hljs-keyword{color:#81a2be}.hljs-keyword,.javascript .hljs-function{color:#b294bb}.hljs{display:block;overflow-x:auto;background:#1d1f21;color:#c5c8c6;padding:.5em;-webkit-text-size-adjust:none}a.button,pre code{display:inline-block}.coffeescript .javascript,.javascript .xml,.tex .hljs-formula,.xml .css,.xml .hljs-cdata,.xml .javascript,.xml .vbscript{opacity:.5}input[type=range]{-webkit-appearance:none;width:100%;height:10px;margin:2rem 0;border-radius:5px;background-color:#ffc785}input[type=range]::-moz-range-track{background-color:transparent}input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;background:#fff;border:1px solid #b86300;width:20px;height:20px;border-radius:10px;cursor:pointer}input[type=range]::-moz-range-thumb{background:#fff;border:1px solid #b86300;width:20px;height:20px;border-radius:10px;cursor:pointer}a.button,pre code{border-radius:5px}input[type=range]::-moz-focus-outer{border:0}.dark.blue input[type=range]{background-color:#67deeb}.dark.blue input[type=range]::-webkit-slider-thumb{border:1px solid #1cbed0}.dark.blue input[type=range]::-moz-range-thumb{border:1px solid #1cbed0}*,:after,:before{box-sizing:inherit}body{margin:0;font-family:proxima-nova,"Proxima Nova",sans-serif;font-size:16px;text-align:center;color:#4d4d4d}h1,h2,h3,h4,h5,h6{font-weight:300}h2{font-size:1.15rem;font-weight:400;margin:3rem 0}a,a:visited{color:#225378;cursor:pointer;transition:color .2s ease}a.button{margin:1rem 0;padding:.5rem;background:#fff;border:1px solid #ccc;color:#4d4d4d}a.button:hover{background:#fcfcfc}.dark a,.dark a:visited{color:#A2E2E4}code{font-family:Inconsolata,monospace;font-size:14px}pre{white-space:pre-wrap;word-wrap:break-word;margin:3rem 0}pre code{padding:1rem}p{max-width:400px;margin-left:auto;margin-right:auto}.component-hero .content,section .content,section .content canvas,section .content img{max-width:100%}.clearfix:after,.clearfix:before,.component-colorbrewerdemo .item:after,.component-colorbrewerdemo .item:before,section .content:after,section .content:before{content:' ';display:table}.component-hero{min-height:100vh;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;width:100%;overflow:hidden}.component-hero h1{font-size:5rem;margin:0 0}.component-hero h1 a{color:#4d4d4d}.component-hero h1 a:hover{color:#737373}.component-hero p{font-size:1.5rem;text-align:center;max-width:100%}.component-hero canvas{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);min-width:100%;z-index:-1}.component-hero .fancybutton{display:inline-block;font-size:18px;text-transform:uppercase;padding:5px 10px;margin:5px 10px;color:#4d4d4d;vertical-align:middle;text-decoration:none;transition:color .2s ease}.component-hero .fancybutton:hover{color:#666}.component-hero .fancybutton .icon{font-size:22px}.component-hero .arrow-down{position:absolute;left:50%;bottom:50px;box-shadow:0 2px 5px 0 rgba(0,0,0,.3);display:block;height:3rem;width:3rem;background:#fff;border-radius:50%;transition:all .2s ease;margin-left:-1.5rem;opacity:.7}.component-hero .arrow-down:hover{box-shadow:0 2px 6px 0 rgba(0,0,0,.4);-webkit-transform:scale(1.06);transform:scale(1.06);opacity:1}.component-hero .arrow-down:after{content:'';display:inline-block;background:url(images/arrow-down.png)center no-repeat;height:3rem;width:3rem;background-size:100%;opacity:.5}@media (max-width:600px){.component-hero h1{font-size:3rem}.component-hero p{font-size:1.2rem}.component-hero .fancybutton{font-size:1rem;padding:2px 5px;margin:2px 5px}.component-hero .fancybutton .icon{font-size:18px;display:inline-block}}section.dark{color:#e6e6e6;background:#404040}section.dark pre code{background:#333}section.light{color:#4d4d4d;background:#FFFFD9}section.light pre code{background:#EDDEBA;color:#5E584A}section.blue{background:#1695A3;color:#fff}section.blue pre code{background:#13808d}section.orange{background:#EB7F00}section .content{min-width:230px;width:700px;margin:0 auto;padding:4rem 1rem;position:relative}.component-colorbrewerdemo{-webkit-columns:3;-moz-columns:3;columns:3;margin:3rem 0}.component-colorbrewerdemo .item{margin-bottom:2rem;column-break-inside:none}.component-colorbrewerdemo .item canvas{border-radius:50%}
/*# sourceMappingURL=data:application/json;base64, */